name: Deploy to EC2 (Docker Compose)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    # 동시에 두 번 이상 배포되는 것 방지(선택이지만 권장)
    concurrency:
      group: deploy-to-ec2
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven (skip tests)
        working-directory: .
        run: mvn -U -B clean package -DskipTests

      # 원격 경로 보장(없어도 안전)
      - name: Prepare remote directories
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p ${{ secrets.EC2_PATH }}/app

      # target 폴더의 JAR를 EC2의 /app/ 밑으로 업로드
      # strip_components: 1 → tar 내부의 'target/' 디렉터리를 제거하고 바로 파일만 올림
      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: target/*.jar
          target: ${{ secrets.EC2_PATH }}/app/
          overwrite: true
          strip_components: 1

      # 가장 최근에 업로드된 JAR를 표준 파일명으로 맞추고, Compose 재기동
      - name: Restart Docker Compose on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            cd ${{ secrets.EC2_PATH }}

            # 최신 JAR을 표준 이름으로 교체
            LATEST_JAR=$(ls -t app/*.jar | head -n 1)
            if [ -z "$LATEST_JAR" ]; then
              echo "No JAR found under app/"; exit 1
            fi
            mv -f "$LATEST_JAR" app/tripsketch.jar

            # 컨테이너 재빌드/재기동
            docker compose up -d --build
            docker compose ps
