<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
      "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sketchers.tripsketch_back.repository.AlbumMapper">
    <resultMap id="TripScheduleResultMap" type="com.sketchers.tripsketch_back.entity.TripSchedule">
        <result property="date" column="date"/>
        <collection property="places" ofType="com.sketchers.tripsketch_back.entity.TripSchedulePlace">
            <result property="tripScheduleId" column="trip_schedule_id"/>
            <result property="place" column="place_name"/>
        </collection>
    </resultMap>
    <select id="getAlbums" resultType="com.sketchers.tripsketch_back.entity.Album">
        select
            at.album_id,
            at.trip_id,
            v.date,
            v.place_name
        from
            album_tb at
            left outer join v_trip_schedule_info v on(v.trip_schedule_id = at.trip_schedule_id)
        where
            at.user_id = #{userId}
            and at.trip_id = #{tripId}
    </select>
    <select id="getPhotos" resultType="com.sketchers.tripsketch_back.entity.Photo" >
        select
            photo_id,
            photo_url,
            memo
        from
            photo_tb
        where
            album_id = #{albumId}
    </select>
    <select id="getTripStartDate" resultType="string">
        select
            start_date
        from
            trip_tb
        where
            user_id = #{userId}
            and trip_id = #{tripId}
    </select>
    <select id="getThumbnailPhoto" resultType="com.sketchers.tripsketch_back.entity.Photo" >
        select
            photo_id,
            photo_url,
            memo
        from
            photo_tb
        where
            album_id = #{albumId}
        LIMIT 1
    </select>
    <select id="getAlbum" resultType="com.sketchers.tripsketch_back.entity.Album">
        select
            at.album_id,
            at.trip_id,
            v.date,
            v.place_name
        from
            album_tb at
            left outer join v_trip_schedule_info v on(v.trip_schedule_id = at.trip_schedule_id)
        where
            at.user_id = #{userId}
            and at.trip_id = #{tripId}
            and at.album_id = #{albumId}
    </select>
    <select id="getPhotosByFolder" resultType="com.sketchers.tripsketch_back.entity.Photo" >
        select
        	pt.photo_id,
        	pt.photo_url,
        	pt.memo
        from
        	album_tb at
            left outer join photo_tb pt on(pt.album_id = at.album_id)
        where
            at.album_id = #{albumId}
    </select>
    <select id="getTripScheduleDates" resultType="string" >
        select
            DISTINCT tst.date
        from
            trip_tb tt
            left outer join trip_schedule_tb tst on(tst.trip_id = tt.trip_id)
        where
            tt.user_id = #{userId} and
            tst.trip_id = #{tripId}
    </select>
    <select id="getTripSchedules" resultMap="TripScheduleResultMap">
        select
            v.date,
        	v.trip_schedule_id,
        	v.place_name
        from
            trip_tb tt
            left outer join trip_schedule_tb tst on(tst.trip_id = tt.trip_id)
        	left outer join v_trip_schedule_info v on(v.trip_schedule_id = tst.trip_schedule_id)
        where
            tt.user_id = #{userId} and
        	tst.trip_id = #{tripId}
        group by v.date, v.trip_schedule_id
    </select>
    <select id="getAlbumId" resultType="int">
        select
            album_id
        from
            album_tb
        where
            user_id = #{userId} and
            trip_id = #{tripId} and
            trip_schedule_id = #{tripScheduleId}
    </select>
    <insert id="createTripAlbum" >
        INSERT INTO album_tb (user_id, trip_id, trip_schedule_id)
        VALUES (#{userId}, #{tripId}, #{tripScheduleId});
        <selectKey resultType="int" keyProperty="albumId" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <insert id="insertPhoto">
        INSERT INTO photo_tb (album_id, photo_url, memo)
        VALUES (#{albumId}, #{photoUrl}, #{memo})
    </insert>
    <update id="editPhotoMemo" >
        update
            photo_tb
        set
            memo = #{memo}
        where
            photo_id = #{photoId}
    </update>

</mapper>